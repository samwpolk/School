{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pylab as plt\n",
    "\n",
    "# map cell to cell, add circular cell to goal point\n",
    "points_list = [(0,1), (1,5), (5,6), (5,4), (1,2), (2,3), (2,7), (1,8)]\n",
    "\n",
    "\n",
    "goal = 8\n",
    "\n",
    "import networkx as nx\n",
    "G=nx.Graph()\n",
    "G.add_edges_from(points_list)\n",
    "pos = nx.spring_layout(G)\n",
    "nx.draw_networkx_nodes(G,pos)\n",
    "nx.draw_networkx_edges(G,pos)\n",
    "nx.draw_networkx_labels(G,pos)\n",
    "plt.show()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(0, 1)\n",
      "(1, 5)\n",
      "(5, 6)\n",
      "(5, 4)\n",
      "(1, 2)\n",
      "(2, 3)\n",
      "(2, 7)\n",
      "(1, 8)\n",
      "max_value 0.0\n",
      "max_value 0.0\n",
      "max_value 100.0\n",
      "max_value 0.0\n",
      "max_value 0.0\n",
      "max_value 0.0\n",
      "max_value 0.0\n",
      "max_value 80.0\n",
      "max_value 100.0\n",
      "max_value 0.0\n",
      "max_value 0.0\n",
      "max_value 0.0\n",
      "max_value 80.0\n",
      "max_value 180.0\n",
      "max_value 0.0\n",
      "max_value 64.0\n",
      "max_value 0.0\n",
      "max_value 64.0\n",
      "max_value 144.0\n",
      "max_value 0.0\n",
      "max_value 0.0\n",
      "max_value 64.0\n",
      "max_value 115.2\n",
      "max_value 92.16000000000001\n",
      "max_value 115.2\n",
      "max_value 64.0\n",
      "max_value 64.0\n",
      "max_value 180.0\n",
      "max_value 64.0\n",
      "max_value 144.0\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 0.0\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 144.0\n",
      "max_value 92.16000000000001\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 144.0\n",
      "max_value 244.0\n",
      "max_value 195.20000000000002\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 92.16000000000001\n",
      "max_value 115.2\n",
      "max_value 195.20000000000002\n",
      "max_value 256.16\n",
      "max_value 92.16000000000001\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 92.16000000000001\n",
      "max_value 304.928\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 343.9424\n",
      "max_value 115.2\n",
      "max_value 195.20000000000002\n",
      "max_value 156.16000000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 115.2\n",
      "max_value 156.16000000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 92.16000000000001\n",
      "max_value 195.20000000000002\n",
      "max_value 115.2\n",
      "max_value 156.16000000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 195.20000000000002\n",
      "max_value 156.16000000000003\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 124.92800000000003\n",
      "max_value 115.2\n",
      "max_value 115.2\n",
      "max_value 124.92800000000003\n",
      "max_value 115.2\n",
      "max_value 195.20000000000002\n",
      "max_value 156.16000000000003\n",
      "max_value 115.2\n",
      "max_value 195.20000000000002\n",
      "max_value 115.2\n",
      "max_value 375.15392\n",
      "max_value 195.20000000000002\n",
      "max_value 92.16000000000001\n",
      "max_value 195.20000000000002\n",
      "max_value 156.16000000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 400.12313600000004\n",
      "max_value 156.16000000000003\n",
      "max_value 124.92800000000003\n",
      "max_value 156.16000000000003\n",
      "max_value 420.09850880000005\n",
      "max_value 420.09850880000005\n",
      "max_value 156.16000000000003\n",
      "max_value 124.92800000000003\n",
      "max_value 336.0788070400001\n",
      "max_value 336.0788070400001\n",
      "max_value 420.09850880000005\n",
      "max_value 268.8630456320001\n",
      "max_value 156.16000000000003\n",
      "max_value 336.0788070400001\n",
      "max_value 156.16000000000003\n",
      "max_value 215.09043650560008\n",
      "max_value 336.0788070400001\n",
      "max_value 124.92800000000003\n",
      "max_value 336.0788070400001\n",
      "max_value 336.0788070400001\n",
      "max_value 124.92800000000003\n",
      "max_value 436.0788070400001\n",
      "max_value 336.0788070400001\n",
      "max_value 448.8630456320001\n",
      "max_value 124.92800000000003\n",
      "max_value 124.92800000000003\n",
      "max_value 268.8630456320001\n",
      "max_value 124.92800000000003\n",
      "max_value 268.8630456320001\n",
      "max_value 268.8630456320001\n",
      "max_value 268.8630456320001\n",
      "max_value 448.8630456320001\n",
      "max_value 156.16000000000003\n",
      "max_value 359.0904365056001\n",
      "max_value 268.8630456320001\n",
      "max_value 359.0904365056001\n",
      "max_value 459.0904365056001\n",
      "max_value 287.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 229.8178793635841\n",
      "max_value 287.2723492044801\n",
      "max_value 287.2723492044801\n",
      "max_value 459.0904365056001\n",
      "max_value 287.2723492044801\n",
      "max_value 268.8630456320001\n",
      "max_value 367.2723492044801\n",
      "max_value 287.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 467.2723492044801\n",
      "max_value 287.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 293.8178793635841\n",
      "max_value 473.8178793635841\n",
      "max_value 367.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 293.8178793635841\n",
      "max_value 287.2723492044801\n",
      "max_value 287.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 287.2723492044801\n",
      "max_value 287.2723492044801\n",
      "max_value 293.8178793635841\n",
      "max_value 479.0543034908673\n",
      "max_value 287.2723492044801\n",
      "max_value 293.8178793635841\n",
      "max_value 483.2434427926939\n",
      "max_value 287.2723492044801\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 287.2723492044801\n",
      "max_value 229.8178793635841\n",
      "max_value 287.2723492044801\n",
      "max_value 293.8178793635841\n",
      "max_value 367.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 235.05430349086728\n",
      "max_value 287.2723492044801\n",
      "max_value 287.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 367.2723492044801\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 287.2723492044801\n",
      "max_value 235.05430349086728\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 287.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 229.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 229.8178793635841\n",
      "max_value 486.5947542341551\n",
      "max_value 293.8178793635841\n",
      "max_value 489.2758033873241\n",
      "max_value 367.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 235.05430349086728\n",
      "max_value 293.8178793635841\n",
      "max_value 235.05430349086728\n",
      "max_value 235.05430349086728\n",
      "max_value 367.2723492044801\n",
      "max_value 367.2723492044801\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 235.05430349086728\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 367.2723492044801\n",
      "max_value 293.8178793635841\n",
      "max_value 367.2723492044801\n",
      "max_value 293.8178793635841\n",
      "max_value 491.4206427098593\n",
      "max_value 393.13651416788747\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 235.05430349086728\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 393.13651416788747\n",
      "max_value 393.13651416788747\n",
      "max_value 393.13651416788747\n",
      "max_value 235.05430349086728\n",
      "max_value 491.4206427098593\n",
      "max_value 235.05430349086728\n",
      "max_value 293.8178793635841\n",
      "max_value 314.50921133431\n",
      "max_value 293.8178793635841\n",
      "max_value 393.13651416788747\n",
      "max_value 314.50921133431\n",
      "max_value 493.13651416788747\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 494.50921133431\n",
      "max_value 314.50921133431\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 314.50921133431\n",
      "max_value 314.50921133431\n",
      "max_value 494.50921133431\n",
      "max_value 495.607369067448\n",
      "max_value 395.607369067448\n",
      "max_value 395.607369067448\n",
      "max_value 293.8178793635841\n",
      "max_value 395.607369067448\n",
      "max_value 251.60736906744802\n",
      "max_value 314.50921133431\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 251.60736906744802\n",
      "max_value 314.50921133431\n",
      "max_value 314.50921133431\n",
      "max_value 293.8178793635841\n",
      "max_value 235.05430349086728\n",
      "max_value 395.607369067448\n",
      "max_value 314.50921133431\n",
      "max_value 314.50921133431\n",
      "max_value 235.05430349086728\n",
      "max_value 395.607369067448\n",
      "max_value 293.8178793635841\n",
      "max_value 314.50921133431\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 314.50921133431\n",
      "max_value 293.8178793635841\n",
      "max_value 314.50921133431\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 314.50921133431\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 395.607369067448\n",
      "max_value 235.05430349086728\n",
      "max_value 293.8178793635841\n",
      "max_value 395.607369067448\n",
      "max_value 316.48589525395846\n",
      "max_value 395.607369067448\n",
      "max_value 395.607369067448\n",
      "max_value 293.8178793635841\n",
      "max_value 316.48589525395846\n",
      "max_value 395.607369067448\n",
      "max_value 395.607369067448\n",
      "max_value 316.48589525395846\n",
      "max_value 293.8178793635841\n",
      "max_value 316.48589525395846\n",
      "max_value 496.48589525395846\n",
      "max_value 316.48589525395846\n",
      "max_value 293.8178793635841\n",
      "max_value 496.48589525395846\n",
      "max_value 235.05430349086728\n",
      "max_value 293.8178793635841\n",
      "max_value 235.05430349086728\n",
      "max_value 316.48589525395846\n",
      "max_value 496.48589525395846\n",
      "max_value 293.8178793635841\n",
      "max_value 293.8178793635841\n",
      "max_value 397.1887162031668\n",
      "max_value 235.05430349086728\n",
      "max_value 496.48589525395846\n",
      "max_value 397.1887162031668\n",
      "max_value 497.1887162031668\n",
      "max_value 317.75097296253347\n",
      "max_value 253.1887162031668\n",
      "max_value 317.75097296253347\n",
      "max_value 497.75097296253347\n",
      "max_value 253.1887162031668\n",
      "max_value 398.2007783700268\n",
      "max_value 317.75097296253347\n",
      "max_value 317.75097296253347\n",
      "max_value 398.2007783700268\n",
      "max_value 317.75097296253347\n",
      "max_value 497.75097296253347\n",
      "max_value 498.2007783700268\n",
      "max_value 316.48589525395846\n",
      "max_value 316.48589525395846\n",
      "max_value 316.48589525395846\n",
      "max_value 498.2007783700268\n",
      "max_value 316.48589525395846\n",
      "max_value 317.75097296253347\n",
      "max_value 254.2007783700268\n",
      "max_value 253.1887162031668\n",
      "max_value 253.1887162031668\n",
      "max_value 254.2007783700268\n",
      "max_value 254.2007783700268\n",
      "max_value 317.75097296253347\n",
      "max_value 398.5606226960215\n",
      "max_value 318.8484981568172\n",
      "max_value 398.5606226960215\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 318.5606226960215\n",
      "max_value 498.5606226960215\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 318.5606226960215\n",
      "max_value 398.5606226960215\n",
      "max_value 318.8484981568172\n",
      "max_value 498.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 398.5606226960215\n",
      "max_value 398.5606226960215\n",
      "max_value 398.5606226960215\n",
      "max_value 398.5606226960215\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 398.5606226960215\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 499.07879852545375\n",
      "max_value 318.8484981568172\n",
      "max_value 255.07879852545375\n",
      "max_value 255.07879852545375\n",
      "max_value 255.07879852545375\n",
      "max_value 255.07879852545375\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 255.07879852545375\n",
      "max_value 318.8484981568172\n",
      "max_value 499.263038820363\n",
      "max_value 398.5606226960215\n",
      "max_value 398.5606226960215\n",
      "max_value 318.8484981568172\n",
      "max_value 398.5606226960215\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 398.5606226960215\n",
      "max_value 398.5606226960215\n",
      "max_value 255.07879852545375\n",
      "max_value 255.07879852545375\n",
      "max_value 318.8484981568172\n",
      "max_value 398.5606226960215\n",
      "max_value 499.41043105629046\n",
      "max_value 318.8484981568172\n",
      "max_value 398.5606226960215\n",
      "max_value 398.5606226960215\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 398.5606226960215\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 398.5606226960215\n",
      "max_value 398.5606226960215\n",
      "max_value 499.5283448450324\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 399.62267587602594\n",
      "max_value 499.5283448450324\n",
      "max_value 399.62267587602594\n",
      "max_value 255.07879852545375\n",
      "max_value 255.07879852545375\n",
      "max_value 318.8484981568172\n",
      "max_value 499.5283448450324\n",
      "max_value 318.8484981568172\n",
      "max_value 255.07879852545375\n",
      "max_value 318.8484981568172\n",
      "max_value 255.07879852545375\n",
      "max_value 399.62267587602594\n",
      "max_value 399.62267587602594\n",
      "max_value 255.07879852545375\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 255.07879852545375\n",
      "max_value 318.8484981568172\n",
      "max_value 318.8484981568172\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 318.8484981568172\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 255.75851256065664\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 255.75851256065664\n",
      "max_value 319.6981407008208\n",
      "max_value 255.75851256065664\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 255.75851256065664\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 499.62267587602594\n",
      "max_value 399.62267587602594\n",
      "max_value 399.62267587602594\n",
      "max_value 399.62267587602594\n",
      "max_value 399.62267587602594\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 399.62267587602594\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 255.75851256065664\n",
      "max_value 399.62267587602594\n",
      "max_value 399.62267587602594\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 499.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 399.62267587602594\n",
      "max_value 499.75851256065664\n",
      "max_value 319.6981407008208\n",
      "max_value 319.6981407008208\n",
      "max_value 399.80681004852534\n",
      "max_value 319.6981407008208\n",
      "max_value 399.80681004852534\n",
      "max_value 499.75851256065664\n",
      "max_value 319.6981407008208\n",
      "max_value 499.80681004852534\n",
      "max_value 255.75851256065664\n",
      "max_value 399.80681004852534\n",
      "max_value 319.6981407008208\n",
      "max_value 399.80681004852534\n",
      "max_value 255.75851256065664\n",
      "max_value 319.6981407008208\n",
      "max_value 399.80681004852534\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "max_value 399.80681004852534\n",
      "max_value 319.8454480388203\n",
      "max_value 399.80681004852534\n",
      "max_value 255.75851256065664\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 499.8454480388203\n",
      "max_value 399.80681004852534\n",
      "max_value 319.8454480388203\n",
      "max_value 399.80681004852534\n",
      "max_value 255.75851256065664\n",
      "max_value 399.80681004852534\n",
      "max_value 255.87635843105625\n",
      "max_value 255.87635843105625\n",
      "max_value 499.87635843105625\n",
      "max_value 399.80681004852534\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 399.80681004852534\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 399.80681004852534\n",
      "max_value 499.90108674484503\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 399.920869395876\n",
      "max_value 319.8454480388203\n",
      "max_value 255.87635843105625\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 399.920869395876\n",
      "max_value 499.90108674484503\n",
      "max_value 399.920869395876\n",
      "max_value 255.87635843105625\n",
      "max_value 319.93669551670087\n",
      "max_value 399.920869395876\n",
      "max_value 399.920869395876\n",
      "max_value 399.920869395876\n",
      "max_value 255.87635843105625\n",
      "max_value 255.87635843105625\n",
      "max_value 319.93669551670087\n",
      "max_value 319.8454480388203\n",
      "max_value 499.920869395876\n",
      "max_value 319.93669551670087\n",
      "max_value 399.93669551670087\n",
      "max_value 319.93669551670087\n",
      "max_value 319.8454480388203\n",
      "max_value 399.93669551670087\n",
      "max_value 399.93669551670087\n",
      "max_value 319.9493564133607\n",
      "max_value 319.8454480388203\n",
      "max_value 399.93669551670087\n",
      "max_value 399.93669551670087\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 255.87635843105625\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 399.93669551670087\n",
      "max_value 319.9493564133607\n",
      "max_value 255.87635843105625\n",
      "max_value 499.920869395876\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 399.93669551670087\n",
      "max_value 399.93669551670087\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 319.8454480388203\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 499.93669551670087\n",
      "max_value 399.93669551670087\n",
      "max_value 399.93669551670087\n",
      "max_value 319.8454480388203\n",
      "max_value 255.87635843105625\n",
      "max_value 319.9493564133607\n",
      "max_value 399.93669551670087\n",
      "max_value 319.8454480388203\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 255.95948513068856\n",
      "max_value 319.8454480388203\n",
      "max_value 319.9493564133607\n",
      "max_value 319.8454480388203\n",
      "max_value 399.93669551670087\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 319.8454480388203\n",
      "max_value 319.9493564133607\n",
      "max_value 319.8454480388203\n",
      "max_value 399.93669551670087\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 255.95948513068856\n",
      "max_value 319.9493564133607\n",
      "max_value 255.95948513068856\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 255.95948513068856\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 255.95948513068856\n",
      "max_value 399.93669551670087\n",
      "max_value 399.93669551670087\n",
      "max_value 319.9493564133607\n",
      "max_value 399.93669551670087\n",
      "max_value 499.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 399.95948513068856\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 319.9493564133607\n",
      "max_value 399.95948513068856\n",
      "max_value 319.9493564133607\n",
      "max_value 399.95948513068856\n",
      "max_value 319.9675881045509\n",
      "max_value 399.95948513068856\n",
      "max_value 255.95948513068856\n",
      "max_value 319.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 255.97407048364073\n",
      "max_value 319.9675881045509\n",
      "max_value 255.95948513068856\n",
      "max_value 399.95948513068856\n",
      "max_value 319.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 399.95948513068856\n",
      "max_value 319.9675881045509\n",
      "max_value 499.9493564133607\n",
      "max_value 399.95948513068856\n",
      "max_value 319.9675881045509\n",
      "max_value 399.95948513068856\n",
      "max_value 319.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 499.95948513068856\n",
      "max_value 255.97407048364073\n",
      "max_value 255.97407048364073\n",
      "max_value 319.9675881045509\n",
      "max_value 255.97407048364073\n",
      "max_value 319.9675881045509\n",
      "max_value 499.95948513068856\n",
      "max_value 319.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 255.97407048364073\n",
      "max_value 319.9675881045509\n",
      "max_value 499.95948513068856\n",
      "max_value 499.95948513068856\n",
      "max_value 319.9675881045509\n",
      "max_value 255.97407048364073\n",
      "max_value 255.97407048364073\n",
      "max_value 319.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 255.97407048364073\n",
      "max_value 399.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 399.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 255.97407048364073\n",
      "max_value 319.9675881045509\n",
      "max_value 319.9675881045509\n",
      "max_value 255.97407048364073\n",
      "max_value 255.97407048364073\n",
      "max_value 399.9675881045509\n",
      "max_value 319.97407048364073\n",
      "max_value 319.9675881045509\n",
      "max_value 499.9675881045509\n",
      "max_value 319.97407048364073\n",
      "max_value 399.97407048364073\n",
      "max_value 319.97407048364073\n",
      "Trained Q matrix:\n",
      "[[  0.          79.99870344   0.           0.           0.\n",
      "    0.           0.           0.           0.        ]\n",
      " [ 63.99401962   0.          63.99401962   0.           0.\n",
      "   63.99766619   0.           0.         100.        ]\n",
      " [  0.          79.99870344   0.          51.19813295   0.\n",
      "    0.           0.          51.19813295   0.        ]\n",
      " [  0.           0.          63.99896275   0.           0.\n",
      "    0.           0.           0.           0.        ]\n",
      " [  0.           0.           0.           0.           0.\n",
      "   63.99766619   0.           0.           0.        ]\n",
      " [  0.          79.99708274   0.           0.          51.19813295\n",
      "    0.          51.19813295   0.           0.        ]\n",
      " [  0.           0.           0.           0.           0.\n",
      "   63.99766619   0.           0.           0.        ]\n",
      " [  0.           0.          63.99896275   0.           0.\n",
      "    0.           0.           0.           0.        ]\n",
      " [  0.          80.           0.           0.           0.\n",
      "    0.           0.           0.          99.9983793 ]]\n"
     ]
    }
   ],
   "source": [
    "# how many points in graph? x points\n",
    "MATRIX_SIZE = 9\n",
    "\n",
    "# create matrix x*y\n",
    "R = np.matrix(np.ones(shape=(MATRIX_SIZE, MATRIX_SIZE)))\n",
    "R *= -1\n",
    "\n",
    "R\n",
    "\n",
    "# assign zeros to paths and 100 to goal-reaching point\n",
    "for point in points_list:\n",
    "    print(point)\n",
    "    if point[1] == goal:\n",
    "        R[point] = 100\n",
    "    else:\n",
    "        R[point] = 0\n",
    "\n",
    "    if point[0] == goal:\n",
    "        R[point[::-1]] = 100\n",
    "    else:\n",
    "        # reverse of point\n",
    "        R[point[::-1]]= 0\n",
    "    #print (\"point \" + str(point) + \" \" + str(R[point]))\n",
    "R \n",
    "# add goal point round trip\n",
    "R[goal,goal]= 100\n",
    "\n",
    "R\n",
    "###########################################\n",
    "\n",
    "\n",
    "Q = np.matrix(np.zeros([MATRIX_SIZE,MATRIX_SIZE]))\n",
    "\n",
    "Q\n",
    "\n",
    "# learning parameter\n",
    "gamma = 0.8\n",
    "\n",
    "initial_state = 1\n",
    "\n",
    "def available_actions(state):\n",
    "    current_state_row = R[state,]\n",
    "    av_act = np.where(current_state_row >= 0)[1]\n",
    "    return av_act\n",
    "\n",
    "available_act = available_actions(initial_state)\n",
    "\n",
    "def sample_next_action(available_actions_range):\n",
    "    next_action = int(np.random.choice(available_act,1))\n",
    "    return next_action\n",
    "\n",
    "action = sample_next_action(available_act)\n",
    "\n",
    "def update(current_state, action, gamma):\n",
    "\n",
    "  max_index = np.where(Q[action,] == np.max(Q[action,]))[1]\n",
    "\n",
    "  if max_index.shape[0] > 1:\n",
    "      max_index = int(np.random.choice(max_index, size = 1))\n",
    "  else:\n",
    "      max_index = int(max_index)\n",
    "  max_value = Q[action, max_index]\n",
    "\n",
    "  Q[current_state, action] = R[current_state, action] + gamma * max_value\n",
    "  print('max_value', R[current_state, action] + gamma * max_value)\n",
    "\n",
    "  if (np.max(Q) > 0):\n",
    "    return(np.sum(Q/np.max(Q)*100))\n",
    "  else:\n",
    "    return (0)\n",
    "\n",
    "update(initial_state, action, gamma)\n",
    "\n",
    "\n",
    "# Training\n",
    "scores = []\n",
    "for i in range(700):\n",
    "    current_state = np.random.randint(0, int(Q.shape[0]))\n",
    "    available_act = available_actions(current_state)\n",
    "    action = sample_next_action(available_act)\n",
    "    score = update(current_state,action,gamma)\n",
    "    scores.append(score)\n",
    "    #print ('Score:', str(score))\n",
    "\n",
    "print(\"Trained Q matrix:\")\n",
    "print(Q/np.max(Q)*100)\n",
    "\n",
    "# Testing\n",
    "current_state = 0\n",
    "steps = [current_state]\n",
    "\n",
    "while current_state != 8:\n",
    "\n",
    "    next_step_index = np.where(Q[current_state,]\n",
    "        == np.max(Q[current_state,]))[1]\n",
    "\n",
    "    if next_step_index.shape[0] > 1:\n",
    "        next_step_index = int(np.random.choice(next_step_index, size = 1))\n",
    "    else:\n",
    "        next_step_index = int(next_step_index)\n",
    "\n",
    "    steps.append(next_step_index)\n",
    "    current_state = next_step_index\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Most efficient path:\n",
      "[0, 1, 8]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x12c9ad510>]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(\"Most efficient path:\")\n",
    "print(steps)\n",
    "plt.plot(scores)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
